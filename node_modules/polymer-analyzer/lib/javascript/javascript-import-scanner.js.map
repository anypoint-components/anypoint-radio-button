{"version":3,"sources":["javascript/javascript-import-scanner.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAGH,+BAAuC;AACvC,2CAA+B;AAC/B,0CAAiF;AAMjF,wCAAyC;AACzC,mCAAoC;AAEpC,MAAM,eAAe,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAW5D;IAEE,YAAY,OAAwC;QAClD,IAAI,CAAC,gBAAgB,GAAG,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;IAC9D,CAAC;IAEK,IAAI,CACN,QAA4B,EAC5B,KAA0C;;YAC5C,MAAM,OAAO,GAAoB,EAAE,CAAC;YACpC,MAAM,QAAQ,GAAc,EAAE,CAAC;YAC/B,MAAM,OAAO,GAAG,IAAI,CAAC;YAErB,MAAM,KAAK,CAAC;gBACV,mBAAmB,CAAC,IAA0B,EAAE,CAAa;oBAC3D,oEAAoE;oBACpE,8DAA8D;oBAC9D,wEAAwE;oBACxE,sBAAsB;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAc,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC5C,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAChC,QAAQ,CAAC,IAAI,CAAC,IAAI,eAAO,CAAC;4BACxB,OAAO,EAAE,kBAAkB;4BAC3B,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE;4BAC/C,QAAQ,EAAE,gBAAQ,CAAC,OAAO;4BAC1B,IAAI,EAAE,kBAAkB;4BACxB,cAAc,EAAE,QAAQ;yBACzB,CAAC,CAAC,CAAC;wBACJ,MAAM,CAAC;oBACT,CAAC;oBACD,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC;wBACjC,QAAQ,CAAC,IAAI,CAAC,IAAI,eAAO,CAAC;4BACxB,OAAO,EACH,2DAA2D;4BAC/D,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE;4BAC/C,QAAQ,EAAE,gBAAQ,CAAC,OAAO;4BAC1B,IAAI,EAAE,oBAAoB;4BAC1B,cAAc,EAAE,QAAQ;yBACzB,CAAC,CAAC,CAAC;wBACJ,MAAM,CAAC;oBACT,CAAC;oBACD,OAAO,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC1B,WAAW,EACX,OAAO,CAAC,iBAAiB,CACrB,GAAG,CAAC,KAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAClD,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAE,EACzC,IAAI,EACJ,IAAI,CAAC,CAAC,CAAC;gBACb,CAAC;gBAED,sBAAsB,CAAC,IAA6B,EAAE,CAAa;oBACjE,OAAO,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC1B,WAAW,EACX,OAAO,CAAC,iBAAiB,CACrB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAChD,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAE,EACzC,IAAI,EACJ,KAAK,CAAC,CAAC,CAAC;gBACd,CAAC;gBAED,yBAAyB,CAAC,IAAI,EAAE,OAAO;oBACrC,OAAO,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC1B,WAAW,EACX,OAAO,CAAC,iBAAiB,CACrB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAChD,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAE,EACzC,IAAI,EACJ,KAAK,CAAC,CAAC,CAAC;gBACd,CAAC;gBAED,2BAA2B,CAAC,IAAI,EAAE,OAAO;oBACvC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC;oBACT,CAAC;oBACD,OAAO,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC1B,WAAW,EACX,OAAO,CAAC,iBAAiB,CACrB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAChD,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAE,EACzC,IAAI,EACJ,KAAK,CAAC,CAAC,CAAC;gBACd,CAAC;aAEF,CAAC,CAAC;YACH,MAAM,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;QACvC,CAAC;KAAA;IAEO,iBAAiB,CACrB,SAAiB,EAAE,QAA4B,EAAE,IAAgB,EACjE,QAAe;QACjB,EAAE,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,SAA4B,CAAC;QACtC,CAAC;QACD,IAAI,CAAC;YACH,IAAI,gBAAG,CAAC,SAAS,CAAC,CAAC;YACnB,MAAM,CAAC,SAA4B,CAAC;QACtC,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,qCAAqC;QACvC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,MAAM,CAAC,CAAC,CAAC;YACrC,QAAQ,CAAC,IAAI,CAAC,IAAI,eAAO,CAAC;gBACxB,OAAO,EAAE,4DAA4D;oBACjE,eAAe;gBACnB,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE;gBAC/C,QAAQ,EAAE,gBAAQ,CAAC,OAAO;gBAC1B,IAAI,EAAE,+BAA+B;gBACrC,cAAc,EAAE,QAAQ;aACzB,CAAC,CAAC,CAAC;YACJ,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QACD,MAAM,WAAW,GAAG,IAAI,gBAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YACrC,QAAQ,CAAC,IAAI,CAAC,IAAI,eAAO,CAAC;gBACxB,OAAO,EAAE,uDAAuD;gBAChE,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE;gBAC/C,QAAQ,EAAE,gBAAQ,CAAC,OAAO;gBAC1B,IAAI,EAAE,+BAA+B;gBACrC,cAAc,EAAE,QAAQ;aACzB,CAAC,CAAC,CAAC;YACJ,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QAED,IAAI,YAAY,GAAG,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,iBAAiB,CAAC;QACtB,IAAI,CAAC;YACH,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,YAAY,EAAC,CAAC,CAAC;QACvE,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,QAAQ,CAAC,IAAI,CAAC,IAAI,eAAO,CAAC;gBACxB,OAAO,EAAE,iCAAiC;gBAC1C,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE;gBAC/C,QAAQ,EAAE,gBAAQ,CAAC,OAAO;gBAC1B,IAAI,EAAE,+BAA+B;gBACrC,cAAc,EAAE,QAAQ;aACzB,CAAC,CAAC,CAAC;YACJ,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QAED,IAAI,oBAAoB,GACpB,eAAQ,CAAC,cAAO,CAAC,YAAY,CAAC,EAAE,iBAAiB,CAAoB,CAAC;QAE1E,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAChB,0CAA0C;YAC1C,oBAAoB;gBAChB,oBAAoB,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAoB,CAAC;QAClE,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC3C,oBAAoB,GAAG,IAAI,GAAG,oBAAuC,CAAC;QACxE,CAAC;QACD,MAAM,CAAC,oBAAoB,CAAC;IAC9B,CAAC;CACF;AAjKD,0DAiKC","file":"javascript-import-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as babel from 'babel-types';\nimport {dirname, relative} from 'path';\nimport {URL} from 'whatwg-url';\nimport {FileRelativeUrl, ScannedImport, Severity, Warning} from '../model/model';\n\nimport {Visitor} from './estree-visitor';\nimport {JavaScriptDocument} from './javascript-document';\nimport {JavaScriptScanner} from './javascript-scanner';\n\nimport isWindows = require('is-windows');\nimport resolve = require('resolve');\n\nconst isPathSpecifier = (s: string) => /^\\.{0,2}\\//.test(s);\n\nexport interface JavaScriptImportScannerOptions {\n  /**\n   * Algorithm to use for resolving module specifiers in import\n   * and export statements when rewriting them to be web-compatible.\n   * A value of 'node' uses Node.js resolution to find modules.\n   */\n  moduleResolution?: 'node';\n}\n\nexport class JavaScriptImportScanner implements JavaScriptScanner {\n  moduleResolution?: 'node';\n  constructor(options?: JavaScriptImportScannerOptions) {\n    this.moduleResolution = options && options.moduleResolution;\n  }\n\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const imports: ScannedImport[] = [];\n    const warnings: Warning[] = [];\n    const scanner = this;\n\n    await visit({\n      enterCallExpression(node: babel.CallExpression, _: babel.Node) {\n        // TODO(usergenic): There's no babel.Import type or babel.isImport()\n        // function right now, we have to just check the type property\n        // here until there is; please change to use babel.isImport(node.callee)\n        // once it is a thing.\n        if (node.callee.type as string !== 'Import') {\n          return;\n        }\n        if (node.arguments.length !== 1) {\n          warnings.push(new Warning({\n            message: 'Malformed import',\n            sourceRange: document.sourceRangeForNode(node)!,\n            severity: Severity.WARNING,\n            code: 'malformed-import',\n            parsedDocument: document,\n          }));\n          return;\n        }\n        const arg = node.arguments[0];\n        if (arg.type !== 'StringLiteral') {\n          warnings.push(new Warning({\n            message:\n                'Cannot analyze dynamic imports with non-literal arguments',\n            sourceRange: document.sourceRangeForNode(node)!,\n            severity: Severity.WARNING,\n            code: 'non-literal-import',\n            parsedDocument: document,\n          }));\n          return;\n        }\n        imports.push(new ScannedImport(\n            'js-import',\n            scanner._resolveSpecifier(\n                arg.value as string, document, node, warnings),\n            document.sourceRangeForNode(node)!,\n            document.sourceRangeForNode(node.callee)!,\n            node,\n            true));\n      },\n\n      enterImportDeclaration(node: babel.ImportDeclaration, _: babel.Node) {\n        imports.push(new ScannedImport(\n            'js-import',\n            scanner._resolveSpecifier(\n                node.source.value, document, node, warnings),\n            document.sourceRangeForNode(node)!,\n            document.sourceRangeForNode(node.source)!,\n            node,\n            false));\n      },\n\n      enterExportAllDeclaration(node, _parent) {\n        imports.push(new ScannedImport(\n            'js-import',\n            scanner._resolveSpecifier(\n                node.source.value, document, node, warnings),\n            document.sourceRangeForNode(node)!,\n            document.sourceRangeForNode(node.source)!,\n            node,\n            false));\n      },\n\n      enterExportNamedDeclaration(node, _parent) {\n        if (node.source == null) {\n          return;\n        }\n        imports.push(new ScannedImport(\n            'js-import',\n            scanner._resolveSpecifier(\n                node.source.value, document, node, warnings),\n            document.sourceRangeForNode(node)!,\n            document.sourceRangeForNode(node.source)!,\n            node,\n            false));\n      }\n\n    });\n    return {features: imports, warnings};\n  }\n\n  private _resolveSpecifier(\n      specifier: string, document: JavaScriptDocument, node: babel.Node,\n      warnings: any[]): FileRelativeUrl|undefined {\n    if (isPathSpecifier(specifier)) {\n      return specifier as FileRelativeUrl;\n    }\n    try {\n      new URL(specifier);\n      return specifier as FileRelativeUrl;\n    } catch (e) {\n      // not a parsable URL, try to resolve\n    }\n    if (this.moduleResolution !== 'node') {\n      warnings.push(new Warning({\n        message: 'Cannot resolve module specifier with no module resolution ' +\n            'algorithm set',\n        sourceRange: document.sourceRangeForNode(node)!,\n        severity: Severity.WARNING,\n        code: 'cant-resolve-module-specifier',\n        parsedDocument: document,\n      }));\n      return undefined;\n    }\n    const documentURL = new URL(document.baseUrl);\n    if (documentURL.protocol !== 'file:') {\n      warnings.push(new Warning({\n        message: 'Cannot resolve module specifier in non-local document',\n        sourceRange: document.sourceRangeForNode(node)!,\n        severity: Severity.WARNING,\n        code: 'cant-resolve-module-specifier',\n        parsedDocument: document,\n      }));\n      return undefined;\n    }\n\n    let documentPath = decodeURIComponent(documentURL.pathname);\n    if (isWindows() && documentPath.startsWith('/')) {\n      documentPath = documentPath.substring(1);\n    }\n    let resolvedSpecifier;\n    try {\n      resolvedSpecifier = resolve.sync(specifier, {basedir: documentPath});\n    } catch (e) {\n      warnings.push(new Warning({\n        message: 'Cannot resolve module specifier',\n        sourceRange: document.sourceRangeForNode(node)!,\n        severity: Severity.WARNING,\n        code: 'cant-resolve-module-specifier',\n        parsedDocument: document,\n      }));\n      return undefined;\n    }\n\n    let relativeSpecifierUrl =\n        relative(dirname(documentPath), resolvedSpecifier) as FileRelativeUrl;\n\n    if (isWindows()) {\n      // normalize path separators to URL format\n      relativeSpecifierUrl =\n          relativeSpecifierUrl.replace(/\\\\/g, '/') as FileRelativeUrl;\n    }\n\n    if (!isPathSpecifier(relativeSpecifierUrl)) {\n      relativeSpecifierUrl = './' + relativeSpecifierUrl as FileRelativeUrl;\n    }\n    return relativeSpecifierUrl;\n  }\n}\n"]}