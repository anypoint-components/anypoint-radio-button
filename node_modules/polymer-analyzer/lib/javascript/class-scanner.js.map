{"version":3,"sources":["javascript/class-scanner.ts"],"names":[],"mappings":"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","file":"class-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport generate from 'babel-generator';\nimport {NodePath, Scope} from 'babel-traverse';\nimport * as babel from 'babel-types';\nimport * as doctrine from 'doctrine';\n\nimport {Result} from '../model/analysis';\nimport {MapWithDefault, MethodParam, ScannedClass, ScannedFeature, ScannedMethod, ScannedProperty, ScannedReference, Severity, SourceRange, Warning} from '../model/model';\nimport {extractObservers} from '../polymer/declaration-property-handlers';\nimport {mergePropertyDeclarations, Observer, ScannedPolymerElement} from '../polymer/polymer-element';\nimport {ScannedPolymerElementMixin} from '../polymer/polymer-element-mixin';\nimport {getIsValue, getPolymerProperties, getStaticGetterValue} from '../polymer/polymer2-config';\nimport {MixinVisitor} from '../polymer/polymer2-mixin-scanner';\n\nimport * as astValue from './ast-value';\nimport {getIdentifierName, getNamespacedIdentifier} from './ast-value';\nimport {Visitor} from './estree-visitor';\nimport * as esutil from './esutil';\nimport {getClosureType, getMethods, getOrInferPrivacy, getReturnFromAnnotation, getStaticMethods, inferReturnFromBody, toMethodParam} from './esutil';\nimport {JavaScriptDocument} from './javascript-document';\nimport {JavaScriptScanner} from './javascript-scanner';\nimport * as jsdoc from './jsdoc';\n\n\n/**\n * Represents the first argument of a call to customElements.define.\n */\ntype TagNameExpression = ClassDotIsExpression|StringLiteralExpression;\n\n/** The tagname was the `is` property on an class, like `MyElem.is` */\ninterface ClassDotIsExpression {\n  type: 'is';\n  className: string;\n  classNameSourceRange: SourceRange;\n}\n/** The tag name was just a string literal. */\ninterface StringLiteralExpression {\n  type: 'string-literal';\n  value: string;\n  sourceRange: SourceRange;\n}\n\n\nexport interface ScannedAttribute extends ScannedFeature {\n  name: string;\n  type?: string;\n}\n\n/**\n * Find and classify classes from source code.\n *\n * Currently this has a bunch of Polymer stuff baked in that shouldn't be here\n * in order to support generating only one feature for stuff that's essentially\n * more specific kinds of classes, like Elements, PolymerElements, Mixins, etc.\n *\n * In a future change we'll add a mechanism whereby plugins can claim and\n * specialize classes.\n */\nexport class ClassScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const classFinder = new ClassFinder(document);\n    const mixinFinder = new MixinVisitor(document);\n    const elementDefinitionFinder =\n        new CustomElementsDefineCallFinder(document);\n    const prototypeMemberFinder = new PrototypeMemberFinder(document);\n    // Find all classes and all calls to customElements.define()\n    await Promise.all([\n      visit(classFinder),\n      visit(elementDefinitionFinder),\n      visit(mixinFinder),\n      visit(prototypeMemberFinder),\n    ]);\n    const mixins = mixinFinder.mixins;\n\n    const elementDefinitionsByClassName = new Map<string, ElementDefineCall>();\n    // For classes that show up as expressions in the second argument position\n    // of a customElements.define call.\n    const elementDefinitionsByClassExpression =\n        new Map<babel.ClassExpression, ElementDefineCall>();\n\n    for (const defineCall of elementDefinitionFinder.calls) {\n      // MaybeChainedIdentifier is invented below. It's like Identifier, but it\n      // includes 'Polymer.Element' as a name.\n      if (defineCall.class_.type === 'MaybeChainedIdentifier') {\n        elementDefinitionsByClassName.set(defineCall.class_.name, defineCall);\n      } else {\n        elementDefinitionsByClassExpression.set(defineCall.class_, defineCall);\n      }\n    }\n    // TODO(rictic): emit ElementDefineCallFeatures for define calls that don't\n    //     map to any local classes?\n\n    const mixinClassExpressions = new Set<babel.Node>();\n    for (const mixin of mixins) {\n      if (mixin.classAstNode) {\n        mixinClassExpressions.add(mixin.classAstNode);\n      }\n    }\n\n    // Next we want to distinguish custom elements from other classes.\n    const customElements: CustomElementDefinition[] = [];\n    const normalClasses = [];\n    const classMap = new Map<string, ScannedClass>();\n\n    for (const class_ of classFinder.classes) {\n      if (mixinClassExpressions.has(class_.astNode)) {\n        // This class is a mixin and has already been handled as such.\n        continue;\n      }\n      if (class_.name) {\n        classMap.set(class_.name, class_);\n      }\n      // Class expressions inside the customElements.define call\n      if (babel.isClassExpression(class_.astNode)) {\n        const definition =\n            elementDefinitionsByClassExpression.get(class_.astNode);\n        if (definition) {\n          customElements.push({class_, definition});\n          continue;\n        }\n      }\n      // Classes whose names are referenced in a same-file customElements.define\n      const definition = elementDefinitionsByClassName.get(class_.name!) ||\n          elementDefinitionsByClassName.get(class_.localName!);\n      if (definition) {\n        customElements.push({class_, definition});\n        continue;\n      }\n      // Classes explicitly defined as elements in their jsdoc tags.\n      // TODO(justinfagnani): remove @polymerElement support\n      if (jsdoc.hasTag(class_.jsdoc, 'customElement') ||\n          jsdoc.hasTag(class_.jsdoc, 'polymerElement')) {\n        customElements.push({class_});\n        continue;\n      }\n      // Classes that aren't custom elements, or at least, aren't obviously.\n      normalClasses.push(class_);\n    }\n\n    for (const [name, members] of prototypeMemberFinder.members) {\n      if (classMap.has(name)) {\n        const cls = classMap.get(name)!;\n        cls.finishInitialization(members.methods, members.properties);\n      }\n    }\n\n    const scannedFeatures: (ScannedPolymerElement|ScannedClass|\n                            ScannedPolymerElementMixin)[] = [];\n    for (const element of customElements) {\n      scannedFeatures.push(this._makeElementFeature(element, document));\n    }\n    for (const scannedClass of normalClasses) {\n      scannedFeatures.push(scannedClass);\n    }\n    for (const mixin of mixins) {\n      scannedFeatures.push(mixin);\n    }\n\n    return {\n      features: scannedFeatures,\n      warnings: [\n        ...elementDefinitionFinder.warnings,\n        ...classFinder.warnings,\n        ...mixinFinder.warnings,\n      ]\n    };\n  }\n\n  private _makeElementFeature(\n      element: CustomElementDefinition,\n      document: JavaScriptDocument): ScannedPolymerElement {\n    const class_ = element.class_;\n    const astNode = element.class_.astNode;\n    const docs = element.class_.jsdoc;\n    const customElementTag = jsdoc.getTag(class_.jsdoc, 'customElement');\n    let tagName: string|undefined = undefined;\n    if (element.definition &&\n        element.definition.tagName.type === 'string-literal') {\n      tagName = element.definition.tagName.value;\n    } else if (customElementTag && customElementTag.description) {\n      tagName = customElementTag.description;\n    } else if (\n        babel.isClassExpression(astNode) || babel.isClassDeclaration(astNode)) {\n      tagName = getIsValue(astNode);\n    }\n    let warnings: Warning[] = [];\n\n    let scannedElement: ScannedPolymerElement;\n    let methods = new Map<string, ScannedMethod>();\n    let staticMethods = new Map<string, ScannedMethod>();\n    let observers: Observer[] = [];\n\n    // This will cover almost all classes, except those defined only by\n    // applying a mixin. e.g.   const MyElem = Mixin(HTMLElement)\n    if (babel.isClassExpression(astNode) || babel.isClassDeclaration(astNode)) {\n      const observersResult = this._getObservers(astNode, document);\n      observers = [];\n      if (observersResult) {\n        observers = observersResult.observers;\n        warnings = warnings.concat(observersResult.warnings);\n      }\n      const polymerProps = getPolymerProperties(astNode, document);\n      for (const prop of polymerProps) {\n        const constructorProp = class_.properties.get(prop.name);\n        let finalProp;\n        if (constructorProp) {\n          finalProp = mergePropertyDeclarations(constructorProp, prop);\n        } else {\n          finalProp = prop;\n        }\n        class_.properties.set(prop.name, finalProp);\n      }\n      methods = getMethods(astNode, document);\n      staticMethods = getStaticMethods(astNode, document);\n    }\n\n    const extendsTag = jsdoc.getTag(docs, 'extends');\n    const extends_ = extendsTag !== undefined ? extendsTag.name : undefined;\n\n    // TODO(justinfagnani): Infer mixin applications and superclass from AST.\n    scannedElement = new ScannedPolymerElement({\n      className: class_.name,\n      tagName,\n      astNode,\n      properties: [...class_.properties.values()],\n      methods,\n      staticMethods,\n      observers,\n      events: esutil.getEventComments(astNode),\n      attributes: new Map(),\n      behaviors: [],\n      extends: extends_,\n      listeners: [],\n\n      description: class_.description,\n      sourceRange: class_.sourceRange,\n      superClass: class_.superClass,\n      jsdoc: class_.jsdoc,\n      abstract: class_.abstract,\n      mixins: class_.mixins,\n      privacy: class_.privacy\n    });\n\n    if (babel.isClassExpression(astNode) || babel.isClassDeclaration(astNode)) {\n      const observedAttributes = this._getObservedAttributes(astNode, document);\n\n      if (observedAttributes != null) {\n        // If a class defines observedAttributes, it overrides what the base\n        // classes defined.\n        // TODO(justinfagnani): define and handle composition patterns.\n        scannedElement.attributes.clear();\n        for (const attr of observedAttributes) {\n          scannedElement.attributes.set(attr.name, attr);\n        }\n      }\n    }\n\n    warnings.forEach((w) => scannedElement.warnings.push(w));\n\n    return scannedElement;\n  }\n\n  private _getObservers(\n      node: babel.ClassDeclaration|babel.ClassExpression,\n      document: JavaScriptDocument) {\n    const returnedValue = getStaticGetterValue(node, 'observers');\n    if (returnedValue) {\n      return extractObservers(returnedValue, document);\n    }\n  }\n\n  private _getObservedAttributes(\n      node: babel.ClassDeclaration|babel.ClassExpression,\n      document: JavaScriptDocument) {\n    const returnedValue = getStaticGetterValue(node, 'observedAttributes');\n    if (returnedValue && babel.isArrayExpression(returnedValue)) {\n      return this._extractAttributesFromObservedAttributes(\n          returnedValue, document);\n    }\n  }\n\n  /**\n   * Extract attributes from the array expression inside a static\n   * observedAttributes method.\n   *\n   * e.g.\n   *     static get observedAttributes() {\n   *       return [\n   *         /** @type {boolean} When given the element is totally inactive *\\/\n   *         'disabled',\n   *         /** @type {boolean} When given the element is expanded *\\/\n   *         'open'\n   *       ];\n   *     }\n   */\n  private _extractAttributesFromObservedAttributes(\n      arry: babel.ArrayExpression, document: JavaScriptDocument) {\n    const results: ScannedAttribute[] = [];\n    for (const expr of arry.elements) {\n      const value = astValue.expressionToValue(expr);\n      if (value && typeof value === 'string') {\n        let description = '';\n        let type: string|null = null;\n        const comment = esutil.getAttachedComment(expr);\n        if (comment) {\n          const annotation = jsdoc.parseJsdoc(comment);\n          description = annotation.description || description;\n          const tags = annotation.tags || [];\n          for (const tag of tags) {\n            if (tag.title === 'type') {\n              type = type || doctrine.type.stringify(tag.type!);\n            }\n            // TODO(justinfagnani): this appears wrong, any tag could have a\n            // description do we really let any tag's description override\n            // the previous?\n            description = description || tag.description || '';\n          }\n        }\n        const attribute: ScannedAttribute = {\n          name: value,\n          description: description,\n          sourceRange: document.sourceRangeForNode(expr),\n          astNode: expr,\n          warnings: [],\n        };\n        if (type) {\n          attribute.type = type;\n        }\n        results.push(attribute);\n      }\n    }\n    return results;\n  }\n}\n\ninterface CustomElementDefinition {\n  class_: ScannedClass;\n  definition?: ElementDefineCall;\n}\n\nclass PrototypeMemberFinder implements Visitor {\n  readonly members = new MapWithDefault<string, {\n    methods: Map<string, ScannedMethod>,\n    properties: Map<string, ScannedProperty>\n  }>(() => ({\n       methods: new Map<string, ScannedMethod>(),\n       properties: new Map<string, ScannedProperty>()\n     }));\n  private readonly _document: JavaScriptDocument;\n\n  constructor(document: JavaScriptDocument) {\n    this._document = document;\n  }\n\n  enterExpressionStatement(node: babel.ExpressionStatement) {\n    if (babel.isAssignmentExpression(node.expression)) {\n      this._createMemberFromAssignment(\n          node.expression, getJSDocAnnotationForNode(node));\n    } else if (babel.isMemberExpression(node.expression)) {\n      this._createMemberFromMemberExpression(\n          node.expression, getJSDocAnnotationForNode(node));\n    }\n  }\n\n  private _createMemberFromAssignment(\n      node: babel.AssignmentExpression, jsdocAnn?: jsdoc.Annotation) {\n    if (!babel.isMemberExpression(node.left) ||\n        !babel.isMemberExpression(node.left.object) ||\n        !babel.isIdentifier(node.left.property)) {\n      return;\n    }\n\n    const leftExpr = node.left.object;\n    const leftProperty = node.left.property;\n    const cls = getIdentifierName(leftExpr.object);\n    if (!cls || getIdentifierName(leftExpr.property) !== 'prototype') {\n      return;\n    }\n\n    if (babel.isFunctionExpression(node.right)) {\n      const prop = this._createMethodFromExpression(\n          leftProperty.name, node.right, jsdocAnn);\n      if (prop) {\n        this._addMethodToClass(cls, prop);\n      }\n    } else {\n      const method =\n          this._createPropertyFromExpression(leftProperty.name, node, jsdocAnn);\n      if (method) {\n        this._addPropertyToClass(cls, method);\n      }\n    }\n  }\n\n  private _addMethodToClass(cls: string, member: ScannedMethod) {\n    const classMembers = this.members.get(cls);\n    classMembers.methods.set(member.name, member);\n  }\n\n  private _addPropertyToClass(cls: string, member: ScannedProperty) {\n    const classMembers = this.members.get(cls);\n    classMembers.properties.set(member.name, member);\n  }\n\n  private _createMemberFromMemberExpression(\n      node: babel.MemberExpression, jsdocAnn: jsdoc.Annotation|undefined) {\n    const left = node.object;\n\n    // we only want `something.prototype.member`\n    if (!babel.isIdentifier(node.property) || !babel.isMemberExpression(left) ||\n        getIdentifierName(left.property) !== 'prototype') {\n      return;\n    }\n\n    const cls = getIdentifierName(left.object);\n\n    if (!cls) {\n      return;\n    }\n\n    if (jsdoc.hasTag(jsdocAnn, 'function')) {\n      const prop =\n          this._createMethodFromExpression(node.property.name, node, jsdocAnn);\n      if (prop) {\n        this._addMethodToClass(cls, prop);\n      }\n    } else {\n      const method = this._createPropertyFromExpression(\n          node.property.name, node, jsdocAnn);\n      if (method) {\n        this._addPropertyToClass(cls, method);\n      }\n    }\n  }\n\n  private _createPropertyFromExpression(\n      name: string, node: babel.AssignmentExpression|babel.MemberExpression,\n      jsdocAnn: jsdoc.Annotation|undefined) {\n    let description;\n    let type;\n    let readOnly = false;\n    const privacy = getOrInferPrivacy(name, jsdocAnn);\n    const sourceRange = this._document.sourceRangeForNode(node)!;\n    const warnings: Warning[] = [];\n\n    if (jsdocAnn) {\n      description = jsdoc.getDescription(jsdocAnn);\n      readOnly = jsdoc.hasTag(jsdocAnn, 'readonly');\n    }\n\n    let detectedType: Result<string, Warning>;\n\n    if (babel.isAssignmentExpression(node)) {\n      detectedType =\n          getClosureType(node.right, jsdocAnn, sourceRange, this._document);\n    } else {\n      detectedType =\n          getClosureType(node, jsdocAnn, sourceRange, this._document);\n    }\n\n    if (detectedType.successful) {\n      type = detectedType.value;\n    } else {\n      warnings.push(detectedType.error);\n      type = '?';\n    }\n\n    return {\n      name,\n      astNode: node,\n      type,\n      jsdoc: jsdocAnn,\n      sourceRange,\n      description,\n      privacy,\n      warnings,\n      readOnly,\n    };\n  }\n\n  private _createMethodFromExpression(\n      name: string, node: babel.FunctionExpression|babel.MemberExpression,\n      jsdocAnn: jsdoc.Annotation|undefined) {\n    let description;\n    let ret;\n    const privacy = getOrInferPrivacy(name, jsdocAnn);\n    const params = new Map<string, MethodParam>();\n\n    if (jsdocAnn) {\n      description = jsdoc.getDescription(jsdocAnn);\n      ret = getReturnFromAnnotation(jsdocAnn);\n\n      if (babel.isFunctionExpression(node)) {\n        (node.params || []).forEach((nodeParam) => {\n          const param = toMethodParam(nodeParam, jsdocAnn);\n          params.set(param.name, param);\n        });\n      } else {\n        for (const tag of (jsdocAnn.tags || [])) {\n          if (tag.title !== 'param' || !tag.name) {\n            continue;\n          }\n          let tagType;\n          let tagDescription;\n          if (tag.type) {\n            tagType = doctrine.type.stringify(tag.type);\n          }\n          if (tag.description) {\n            tagDescription = tag.description;\n          }\n          params.set(\n              tag.name,\n              {name: tag.name, type: tagType, description: tagDescription});\n        }\n      }\n    }\n\n    if (ret === undefined && babel.isFunctionExpression(node)) {\n      ret = inferReturnFromBody(node);\n    }\n\n    return {\n      name,\n      type: ret !== undefined ? ret.type : undefined,\n      description,\n      sourceRange: this._document.sourceRangeForNode(node)!,\n      warnings: [],\n      astNode: node,\n      jsdoc: jsdocAnn,\n      params: Array.from(params.values()),\n      return: ret,\n      privacy\n    };\n  }\n}\n\n/**\n * Finds all classes and matches them up with their best jsdoc comment.\n */\nclass ClassFinder implements Visitor {\n  readonly classes: ScannedClass[] = [];\n  readonly warnings: Warning[] = [];\n  private readonly alreadyMatched = new Set<babel.ClassExpression>();\n  private readonly _document: JavaScriptDocument;\n\n  constructor(document: JavaScriptDocument) {\n    this._document = document;\n  }\n\n  enterAssignmentExpression(\n      node: babel.AssignmentExpression, parent: babel.Node, path: NodePath) {\n    this.handleGeneralAssignment(\n        astValue.getIdentifierName(node.left), node.right, node, parent, path);\n  }\n\n  enterVariableDeclarator(\n      node: babel.VariableDeclarator, parent: babel.Node, path: NodePath) {\n    if (node.init) {\n      this.handleGeneralAssignment(\n          astValue.getIdentifierName(node.id), node.init, node, parent, path);\n    }\n  }\n\n  /** Generalizes over variable declarators and assignment expressions. */\n  private handleGeneralAssignment(\n      assignedName: string|undefined, value: babel.Expression,\n      assignment: babel.VariableDeclarator|babel.AssignmentExpression,\n      statement: babel.Node, path: NodePath) {\n    const comment = esutil.getAttachedComment(value) ||\n        esutil.getAttachedComment(assignment) ||\n        esutil.getAttachedComment(statement) || '';\n    const doc = jsdoc.parseJsdoc(comment);\n    if (babel.isClassExpression(value)) {\n      const name = assignedName ||\n          value.id && astValue.getIdentifierName(value.id) || undefined;\n\n      this._classFound(name, doc, value, path.scope);\n    } else {\n      // TODO(justinfagnani): remove @polymerElement support\n      if (jsdoc.hasTag(doc, 'customElement') ||\n          jsdoc.hasTag(doc, 'polymerElement')) {\n        this._classFound(assignedName, doc, value, path.scope);\n      }\n    }\n  }\n\n  enterClassExpression(\n      node: babel.ClassExpression, parent: babel.Node, path: NodePath) {\n    // Class expressions may be on the right hand side of assignments, so\n    // we may have already handled this expression from the parent or\n    // grandparent node. Class declarations can't be on the right hand side of\n    // assignments, so they'll definitely only be handled once.\n    if (this.alreadyMatched.has(node)) {\n      return;\n    }\n\n    const name = node.id ? astValue.getIdentifierName(node.id) : undefined;\n    const comment = esutil.getAttachedComment(node) ||\n        esutil.getAttachedComment(parent) || '';\n    this._classFound(name, jsdoc.parseJsdoc(comment), node, path.scope);\n  }\n\n  enterClassDeclaration(\n      node: babel.ClassDeclaration, parent: babel.Node, path: NodePath) {\n    const name = astValue.getIdentifierName(node.id);\n    const comment = esutil.getAttachedComment(node) ||\n        esutil.getAttachedComment(parent) || '';\n    this._classFound(name, jsdoc.parseJsdoc(comment), node, path.scope);\n  }\n\n  private _classFound(\n      name: string|undefined, doc: jsdoc.Annotation, astNode: babel.Node,\n      scope: Scope) {\n    const namespacedName = name && getNamespacedIdentifier(name, doc);\n\n    const warnings: Warning[] = [];\n    const properties = extractPropertiesFromClass(astNode, this._document);\n    const methods = getMethods(astNode, this._document);\n\n    this.classes.push(new ScannedClass(\n        namespacedName,\n        name,\n        astNode,\n        doc,\n        (doc.description || '').trim(),\n        this._document.sourceRangeForNode(astNode)!,\n        properties,\n        methods,\n        getStaticMethods(astNode, this._document),\n        this._getExtends(astNode, doc, warnings, this._document, scope),\n        jsdoc.getMixinApplications(\n            this._document, astNode, doc, warnings, scope),\n        getOrInferPrivacy(namespacedName || '', doc),\n        warnings,\n        jsdoc.hasTag(doc, 'abstract'),\n        jsdoc.extractDemos(doc)));\n    if (babel.isClassExpression(astNode)) {\n      this.alreadyMatched.add(astNode);\n    }\n  }\n\n  /**\n   * Returns the name of the superclass, if any.\n   */\n  private _getExtends(\n      node: babel.Node, docs: jsdoc.Annotation, warnings: Warning[],\n      document: JavaScriptDocument,\n      scope: Scope): ScannedReference<'class'>|undefined {\n    const extendsAnnotations =\n        docs.tags!.filter((tag) => tag.title === 'extends');\n\n    // prefer @extends annotations over extends clauses\n    if (extendsAnnotations.length > 0) {\n      const extendsId = extendsAnnotations[0].name;\n      // TODO(justinfagnani): we need source ranges for jsdoc annotations\n      const sourceRange = document.sourceRangeForNode(node)!;\n      if (extendsId == null) {\n        warnings.push(new Warning({\n          code: 'class-extends-annotation-no-id',\n          message: '@extends annotation with no identifier',\n          severity: Severity.WARNING,\n          sourceRange,\n          parsedDocument: this._document\n        }));\n      } else {\n        return new ScannedReference(\n            'class', extendsId, sourceRange, undefined, scope);\n      }\n    } else if (\n        babel.isClassDeclaration(node) || babel.isClassExpression(node)) {\n      // If no @extends tag, look for a superclass.\n      const superClass = node.superClass;\n      if (superClass != null) {\n        let extendsId = getIdentifierName(superClass);\n        if (extendsId != null) {\n          if (extendsId.startsWith('window.')) {\n            extendsId = extendsId.substring('window.'.length);\n          }\n          const sourceRange = document.sourceRangeForNode(superClass)!;\n          return new ScannedReference(\n              'class', extendsId, sourceRange, node.superClass, scope);\n        }\n      }\n    }\n  }\n}\n\ninterface ElementDefineCall {\n  tagName: TagNameExpression;\n  class_: ElementClassExpression;\n}\n\ntype ElementClassExpression = babel.ClassExpression|{\n  type: 'MaybeChainedIdentifier';\n  name: string, sourceRange: SourceRange\n};\n\n/** Finds calls to customElements.define() */\nclass CustomElementsDefineCallFinder implements Visitor {\n  readonly warnings: Warning[] = [];\n  readonly calls: ElementDefineCall[] = [];\n  private readonly _document: JavaScriptDocument;\n\n  constructor(document: JavaScriptDocument) {\n    this._document = document;\n  }\n\n  enterCallExpression(node: babel.CallExpression) {\n    const callee = astValue.getIdentifierName(node.callee);\n    if (!(callee === 'window.customElements.define' ||\n          callee === 'customElements.define')) {\n      return;\n    }\n\n    const tagNameExpression = this._getTagNameExpression(node.arguments[0]);\n    if (tagNameExpression == null) {\n      return;\n    }\n    const elementClassExpression =\n        this._getElementClassExpression(node.arguments[1]);\n    if (elementClassExpression == null) {\n      return;\n    }\n    this.calls.push(\n        {tagName: tagNameExpression, class_: elementClassExpression});\n  }\n\n  private _getTagNameExpression(expression: babel.Node|\n                                undefined): TagNameExpression|undefined {\n    if (expression == null) {\n      return;\n    }\n    const tryForLiteralString = astValue.expressionToValue(expression);\n    if (tryForLiteralString != null &&\n        typeof tryForLiteralString === 'string') {\n      return {\n        type: 'string-literal',\n        value: tryForLiteralString,\n        sourceRange: this._document.sourceRangeForNode(expression)!\n      };\n    }\n    if (babel.isMemberExpression(expression)) {\n      // Might be something like MyElement.is\n      const isPropertyNameIs = (babel.isIdentifier(expression.property) &&\n                                expression.property.name === 'is') ||\n          (astValue.expressionToValue(expression.property) === 'is');\n      const className = astValue.getIdentifierName(expression.object);\n      if (isPropertyNameIs && className) {\n        return {\n          type: 'is',\n          className,\n          classNameSourceRange:\n              this._document.sourceRangeForNode(expression.object)!\n        };\n      }\n    }\n    this.warnings.push(new Warning({\n      code: 'cant-determine-element-tagname',\n      message:\n          `Unable to evaluate this expression down to a definitive string ` +\n          `tagname.`,\n      severity: Severity.WARNING,\n      sourceRange: this._document.sourceRangeForNode(expression)!,\n      parsedDocument: this._document\n    }));\n    return undefined;\n  }\n\n  private _getElementClassExpression(elementDefn: babel.Node|\n                                     undefined): ElementClassExpression|null {\n    if (elementDefn == null) {\n      return null;\n    }\n    const className = astValue.getIdentifierName(elementDefn);\n    if (className) {\n      return {\n        type: 'MaybeChainedIdentifier',\n        name: className,\n        sourceRange: this._document.sourceRangeForNode(elementDefn)!\n      };\n    }\n    if (babel.isClassExpression(elementDefn)) {\n      return elementDefn;\n    }\n    this.warnings.push(new Warning({\n      code: 'cant-determine-element-class',\n      message: `Unable to evaluate this expression down to a class reference.`,\n      severity: Severity.WARNING,\n      sourceRange: this._document.sourceRangeForNode(elementDefn)!,\n      parsedDocument: this._document,\n    }));\n    return null;\n  }\n}\n\nexport function extractPropertiesFromClass(\n    astNode: babel.Node, document: JavaScriptDocument) {\n  const properties = new Map<string, ScannedProperty>();\n\n  if (!babel.isClass(astNode)) {\n    return properties;\n  }\n\n  const construct = astNode.body.body.find(\n                        (member) => babel.isClassMethod(member) &&\n                            member.kind === 'constructor') as babel.ClassMethod;\n\n  if (construct) {\n    const props = extractPropertiesFromConstructor(construct, document);\n    for (const prop of props.values()) {\n      properties.set(prop.name, prop);\n    }\n  }\n\n  for (const prop of esutil\n           .extractPropertiesFromClassOrObjectBody(astNode, document)\n           .values()) {\n    properties.set(prop.name, prop);\n  }\n\n  return properties;\n}\n\nfunction extractPropertyFromExpressionStatement(\n    statement: babel.ExpressionStatement,\n    document: JavaScriptDocument): ScannedProperty|null {\n  let name;\n  let astNode;\n  let defaultValue;\n\n  if (babel.isAssignmentExpression(statement.expression)) {\n    // statements like:\n    // /** @public The foo. */\n    // this.foo = baz;\n    name = getPropertyNameOnThisExpression(statement.expression.left);\n    astNode = statement.expression.left;\n    defaultValue = generate(statement.expression.right).code;\n  } else if (babel.isMemberExpression(statement.expression)) {\n    // statements like:\n    // /** @public The foo. */\n    // this.foo;\n    name = getPropertyNameOnThisExpression(statement.expression);\n    astNode = statement;\n  } else {\n    return null;\n  }\n\n  if (name === undefined) {\n    return null;\n  }\n\n  const annotation = getJSDocAnnotationForNode(statement);\n  if (!annotation) {\n    return null;\n  }\n\n  return {\n    name,\n    astNode,\n    type: getTypeFromAnnotation(annotation),\n    default: defaultValue,\n    jsdoc: annotation,\n    sourceRange: document.sourceRangeForNode(astNode)!,\n    description: jsdoc.getDescription(annotation),\n    privacy: getOrInferPrivacy(name, annotation),\n    warnings: [],\n    readOnly: jsdoc.hasTag(annotation, 'const'),\n  };\n}\n\nfunction extractPropertiesFromConstructor(\n    method: babel.ClassMethod, document: JavaScriptDocument) {\n  const properties = new Map<string, ScannedProperty>();\n\n  for (const statement of method.body.body) {\n    if (!babel.isExpressionStatement(statement)) {\n      continue;\n    }\n    const prop = extractPropertyFromExpressionStatement(statement, document);\n    if (!prop) {\n      continue;\n    }\n    properties.set(prop.name, prop);\n  }\n\n  return properties;\n}\n\nfunction getJSDocAnnotationForNode(node: babel.Node) {\n  const comment = esutil.getAttachedComment(node);\n  const jsdocAnn =\n      comment === undefined ? undefined : jsdoc.parseJsdoc(comment);\n\n  if (!jsdocAnn || jsdocAnn.tags.length === 0) {\n    // The comment only counts if there's a jsdoc annotation in there\n    // somewhere.\n    // Otherwise it's just an assignment, maybe to a property in a\n    // super class or something.\n    return undefined;\n  }\n\n  return jsdocAnn;\n}\n\nfunction getTypeFromAnnotation(jsdocAnn: jsdoc.Annotation): string|undefined {\n  const typeTag = jsdoc.getTag(jsdocAnn, 'type');\n  let type = undefined;\n\n  if (typeTag && typeTag.type) {\n    type = doctrine.type.stringify(typeTag.type);\n  }\n\n  return type;\n}\n\nfunction getPropertyNameOnThisExpression(node: babel.Node) {\n  if (!babel.isMemberExpression(node) || node.computed ||\n      !babel.isThisExpression(node.object) ||\n      !babel.isIdentifier(node.property)) {\n    return;\n  }\n  return node.property.name;\n}\n"]}