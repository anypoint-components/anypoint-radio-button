{"version":3,"sources":["warning/warning-filter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAIH,0CAAiD;AAEjD,uCAAwC;AAmBxC;IAKE,YAAY,OAAgB;QAJ5B,yBAAoB,GAAwB,IAAI,GAAG,EAAU,CAAC;QAC9D,oBAAe,GAAG,gBAAQ,CAAC,IAAI,CAAC;QAChC,yBAAoB,GAA8B,EAAE,CAAC;QAGnD,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QACjD,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,oBAAoB;gBACrB,CAAC,OAAO,CAAC,aAAa;oBACrB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,MAAqB;QAC5C,MAAM,UAAU,GAAgC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;QAClE,MAAM,eAAe,GAAG,gBAAQ,CAAC,IAAI,CAAC;QACtC,MAAM,oBAAoB,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAElE,MAAM,CAAC,IAAI,aAAa,CAAC;YACvB,oBAAoB;YACpB,eAAe;YACf,aAAa,EAAE,UAAU,CAAC,aAAa;SACxC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,OAAgB;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;CACF;AA7CD,sCA6CC","file":"warning-filter.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {ProjectConfig} from 'polymer-project-config';\n\nimport {Severity, Warning} from '../model/model';\n\nimport minimatch = require('minimatch');\nimport {IMinimatch} from 'minimatch';\n\nexport interface Options {\n  /**\n   * Warning codes like 'parse-error' or 'behavior-not-found' to filter out.\n   */\n  warningCodesToIgnore?: ReadonlySet<string>;\n  /**\n   * All warnings below this level of severity will be filtered out.\n   */\n  minimumSeverity: Severity;\n\n  /**\n   * Any file whose URL matches one of these minimatch globs will be ignored.\n   */\n  filesToIgnore?: ReadonlyArray<string>;\n}\n\nexport class WarningFilter {\n  warningCodesToIgnore: ReadonlySet<string> = new Set<string>();\n  minimumSeverity = Severity.INFO;\n  fileGlobsToFilterOut: ReadonlyArray<IMinimatch> = [];\n\n  constructor(options: Options) {\n    if (options.warningCodesToIgnore) {\n      this.warningCodesToIgnore = options.warningCodesToIgnore;\n    }\n    if (options.minimumSeverity != null) {\n      this.minimumSeverity = options.minimumSeverity;\n    }\n    if (options.filesToIgnore) {\n      this.fileGlobsToFilterOut =\n          (options.filesToIgnore ||\n           []).map((glob) => new minimatch.Minimatch(glob, {}));\n    }\n  }\n\n  static fromProjectConfig(config: ProjectConfig) {\n    const lintConfig: Partial<typeof config.lint> = config.lint || {};\n    const minimumSeverity = Severity.INFO;\n    const warningCodesToIgnore = new Set(lintConfig.warningsToIgnore);\n\n    return new WarningFilter({\n      warningCodesToIgnore,\n      minimumSeverity,\n      filesToIgnore: lintConfig.filesToIgnore\n    });\n  }\n\n  shouldIgnore(warning: Warning) {\n    if (this.warningCodesToIgnore.has(warning.code)) {\n      return true;\n    }\n    if (warning.severity > this.minimumSeverity) {\n      return true;\n    }\n    for (const glob of this.fileGlobsToFilterOut) {\n      if (glob.match(warning.sourceRange.file)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n"]}