{"version":3,"sources":["test/javascript/class-scanner_test.ts"],"names":[],"mappings":"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","file":"class-scanner_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert} from 'chai';\n\nimport {Analyzer} from '../../core/analyzer';\nimport {ClassScanner} from '../../javascript/class-scanner';\nimport {Class, Element, ElementMixin, Method, ScannedClass} from '../../model/model';\nimport {CodeUnderliner, fixtureDir, runScanner} from '../test-utils';\n\nsuite('Class', () => {\n  const analyzer = Analyzer.createForDirectory(fixtureDir);\n  const underliner = new CodeUnderliner(analyzer);\n\n  async function getScannedFeatures(filename: string) {\n    const {features} = await runScanner(analyzer, new ClassScanner(), filename);\n    return features;\n  };\n\n  async function getScannedClasses(filename: string): Promise<ScannedClass[]> {\n    const features = await getScannedFeatures(filename);\n    return features.filter((e) => e instanceof ScannedClass) as ScannedClass[];\n  };\n\n  async function getClasses(filename: string): Promise<Class[]> {\n    const analysis = await analyzer.analyze([filename]);\n    return Array.from(analysis.getFeatures({kind: 'class'}));\n  };\n\n  async function getTestProps(class_: ScannedClass|Class) {\n    type TestPropsType = {\n      name: string | undefined,\n      description: string,\n      privacy: string,\n      properties?: any[],\n      methods?: any[],\n      warnings?: ReadonlyArray<string>,\n      mixins?: any[],\n      superClass?: string,\n    };\n    const result: TestPropsType = {\n      name: class_.name,\n      description: class_.description,\n      privacy: class_.privacy\n    };\n    if (class_.properties.size > 0) {\n      result.properties = [];\n      for (const {name} of class_.properties.values()) {\n        result.properties.push({name});\n      }\n    }\n    if (class_.methods.size > 0) {\n      result.methods = [];\n      for (const m of class_.methods.values()) {\n        const method: any = {name: m.name, description: m.description};\n        if (m.params && m.params.length > 0) {\n          method.params = m.params.map((p) => {\n            const param: any = {name: p.name};\n            if (p.description != null) {\n              param.description = p.description;\n            }\n            if (p.type != null) {\n              param.type = p.type;\n            }\n            if (p.defaultValue != null) {\n              param.defaultValue = p.defaultValue;\n            }\n            if (p.rest != null) {\n              param.rest = p.rest;\n            }\n            return param;\n          });\n        }\n        if (m.return ) {\n          method.return = m.return;\n        }\n        const maybeMethod = m as Partial<Method>;\n        if (maybeMethod.inheritedFrom) {\n          method.inheritedFrom = maybeMethod.inheritedFrom;\n        }\n        result.methods.push(method);\n      }\n    }\n    if (class_.mixins.length > 0) {\n      result.mixins = [];\n      for (const {identifier} of class_.mixins) {\n        result.mixins.push({identifier});\n      }\n    }\n    if (class_.warnings.length > 0) {\n      result.warnings = await underliner.underline(class_.warnings);\n    }\n    if (class_.superClass) {\n      result.superClass = class_.superClass.identifier;\n    }\n    return result;\n  };\n\n  suite('scanning', () => {\n    test('finds classes and their names and comment blocks', async () => {\n      const classes = await getScannedClasses('class/class-names.js');\n      assert.deepEqual(classes.map((c) => c.name), [\n        'Declaration',\n        'VarDeclaration',\n        'Assignment',\n        'Namespace.AlsoAssignment',\n        'Declared.AnotherAssignment',\n        'ClassWithNoJsDoc',\n      ]);\n\n      assert.deepEqual(await Promise.all(classes.map((c) => getTestProps(c))), [\n        {\n          name: 'Declaration',\n          description: 'A simple declaration',\n          privacy: 'public',\n        },\n        {\n          description: 'The variable\\'s name is used.',\n          name: 'VarDeclaration',\n          privacy: 'public',\n        },\n        {\n          description: 'The left hand side of the assignment is used.',\n          name: 'Assignment',\n          privacy: 'public',\n        },\n        {\n          description: 'Namespaced assignments work too',\n          name: 'Namespace.AlsoAssignment',\n          privacy: 'public',\n        },\n        {\n          description: 'Declared namespace works too',\n          name: 'Declared.AnotherAssignment',\n          privacy: 'public',\n        },\n        {\n          description: '',\n          name: 'ClassWithNoJsDoc',\n          privacy: 'public',\n        },\n      ]);\n    });\n\n    test('finds properties', async () => {\n      const cls = (await getScannedClasses('class/class-properties.js'))[0];\n\n      assert.deepInclude(cls.properties.get('customPropertyGetterType'), {\n        name: 'customPropertyGetterType',\n        type: 'boolean',\n        description: 'A boolean getter',\n        readOnly: true\n      });\n\n      assert.deepInclude(cls.properties.get('customPropertyWithGetterSetter'), {\n        name: 'customPropertyWithGetterSetter',\n        description: 'a property with a getter/setter',\n        readOnly: false\n      });\n\n      assert.deepInclude(\n          cls.properties.get('customPropertyWithReadOnlyGetter'),\n          {name: 'customPropertyWithReadOnlyGetter', readOnly: true});\n\n      assert.deepInclude(\n          cls.properties.get('customPropertyOnProto'),\n          {name: 'customPropertyOnProto', type: 'string'});\n\n      assert.deepInclude(\n          cls.properties.get('customPropertyOnProtoValue'),\n          {name: 'customPropertyOnProtoValue', type: 'number'});\n\n      assert.deepInclude(cls.properties.get('customPropertyOnProtoDoc'), {\n        name: 'customPropertyOnProtoDoc',\n        description: 'A property',\n        type: '(boolean | number)',\n        privacy: 'private',\n        readOnly: true\n      });\n\n      assert.deepInclude(\n          cls.properties.get('__customPropertyOnProtoPrivate'),\n          {name: '__customPropertyOnProtoPrivate', privacy: 'private'});\n\n      assert.deepEqual(await getTestProps(cls), {\n        name: 'Class',\n        description: '',\n        privacy: 'public',\n        properties: [\n          {name: 'customPropertyWithValue'},\n          {name: 'customPropertyWithJSDoc'},\n          {name: 'customPropertyGetter'},\n          {name: 'customPropertyGetterType'},\n          {name: 'customPropertyWithGetterSetter'},\n          {name: 'customPropertyWithSetterFirst'},\n          {name: 'customPropertyWithReadOnlyGetter'},\n          {name: 'customPropertyOnProto'},\n          {name: 'customPropertyOnProtoValue'},\n          {name: 'customPropertyOnProtoDoc'},\n          {name: '__customPropertyOnProtoPrivate'}\n        ]\n      });\n    });\n\n    test('finds methods', async () => {\n      const classes = await getScannedClasses('class/class-methods.js');\n      assert.deepEqual(await Promise.all(classes.map((c) => getTestProps(c))), [\n        {\n          name: 'Class',\n          description: '',\n          privacy: 'public',\n          properties: [{name: 'customInstanceGetter'}],\n          methods: [\n            {\n              name: 'customInstanceFunction',\n              description: '',\n            },\n            {\n              name: 'customInstanceFunctionWithJSDoc',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithJSDoc.',\n              return: {\n                desc: 'The number 5, always.',\n                type: 'Number',\n              },\n            },\n            {\n              name: 'customInstanceFunctionWithParams',\n              description: '',\n              params: [{name: 'a'}, {name: 'b'}, {name: 'c'}],\n            },\n            {\n              name: 'customInstanceFunctionWithParamsAndJSDoc',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithParamsAndJSDoc.',\n              params: [\n                {\n                  name: 'a',\n                  type: 'Number',\n                  description: 'The first argument',\n                },\n                {\n                  name: 'b',\n                  type: 'Number',\n                },\n                {\n                  name: 'c',\n                  type: 'Number',\n                  description: 'The third argument',\n                }\n              ],\n              return: {\n                desc: 'The number 7, always.',\n                type: 'Number',\n              },\n            },\n            {\n              name: 'customInstanceFunctionWithParamsAndPrivateJSDoc',\n              description: 'This is the description for\\n' +\n                  'customInstanceFunctionWithParamsAndPrivateJSDoc.',\n            },\n            {\n              name: 'customInstanceFunctionWithRestParam',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithRestParam.',\n              params: [\n                {\n                  name: 'a',\n                  type: 'Number',\n                  description: 'The first argument.',\n                },\n                {\n                  name: 'b',\n                  type: '...Number',\n                  rest: true,\n                  description: 'The second argument.',\n                }\n              ],\n              return: {\n                desc: 'The number 9, always.',\n                type: 'Number',\n              },\n            },\n            {\n              name: 'customInstanceFunctionWithParamDefault',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithParamDefault.',\n              params: [\n                {\n                  name: 'a',\n                  type: 'Number',\n                  description: 'The first argument.',\n                },\n                {\n                  name: 'b',\n                  type: 'Number',\n                  defaultValue: '0',\n                  description: 'The second argument.',\n                }\n              ],\n              return: {\n                desc: 'The number 10, always.',\n                type: 'Number',\n              },\n            },\n            {\n              description: undefined,\n              name: 'customInstanceFunctionOnProto',\n              params: [{description: 'a bool', name: 'foo', type: 'boolean'}],\n              return: {type: 'void'}\n            },\n            {\n              description: undefined,\n              name: '__customInstanceFunctionOnProtoPrivate'\n            },\n            {\n              description: undefined,\n              name: 'customInstanceFunctionOnProtoWithBody'\n            },\n            {\n              description: 'Returns the sum of two numbers',\n              name: 'customInstanceFunctionOnProtoWithBodyDoc',\n              params: [\n                {description: 'some number', name: 'a', type: 'number'},\n                {description: 'another number', name: 'b', type: 'number'}\n              ],\n              return: {type: 'number'}\n            },\n          ]\n        },\n      ]);\n    });\n\n    test('deals with super classes correctly', async () => {\n      const classes = await getScannedClasses('class/super-class.js');\n\n      assert.deepEqual(classes.map((f) => f.name), ['Base', 'Subclass']);\n      assert.deepEqual(await Promise.all(classes.map((c) => getTestProps(c))), [\n        {\n          name: 'Base',\n          description: '',\n          privacy: 'public',\n          methods: [\n            {\n              description: 'This is a base method.',\n              name: 'baseMethod',\n              return: {type: 'void'},\n            },\n            {\n              description: 'Will be overriden by Subclass.',\n              name: 'overriddenMethod',\n              return: {type: 'void'},\n            }\n          ]\n        },\n        {\n          name: 'Subclass',\n          description: '',\n          privacy: 'public',\n          superClass: 'Base',\n          methods: [\n            {\n              description: 'Overrides the method on Base.',\n              name: 'overriddenMethod',\n              return: {type: 'void'},\n            },\n            {\n              description: 'This method only exists on Subclass.',\n              name: 'subMethod',\n              return: {type: 'void'},\n            }\n          ]\n        }\n      ]);\n    });\n\n    const testName =\n        'does not produce duplicate classes for elements or mixins';\n    test(testName, async () => {\n      const scannedFeatures =\n          await getScannedFeatures('class/more-specific-classes.js');\n\n      // Ensures no duplicates\n      assert.deepEqual(\n          scannedFeatures.map((f) => (f as any).name),\n          ['Element', 'AnnotatedElement', 'Mixin', 'AnnotatedMixin']);\n\n      // Ensures we get the more specific types\n      // TODO(rictic): these should probably not be Polymer specific.\n      assert.deepEqual(scannedFeatures.map((f) => f.constructor.name), [\n        'ScannedPolymerElement',\n        'ScannedPolymerElement',\n        'ScannedPolymerElementMixin',\n        'ScannedPolymerElementMixin'\n      ]);\n    });\n  });\n\n  suite('resolving', () => {\n    test('finds classes and their names and descriptions', async () => {\n      const classes = await getClasses('class/class-names.js');\n      assert.deepEqual(classes.map((c) => c.name), [\n        'Declaration',\n        'VarDeclaration',\n        'Assignment',\n        'Namespace.AlsoAssignment',\n        'Declared.AnotherAssignment',\n        'ClassWithNoJsDoc',\n      ]);\n\n      assert.deepEqual(await Promise.all(classes.map((c) => getTestProps(c))), [\n        {\n          name: 'Declaration',\n          description: 'A simple declaration',\n          privacy: 'public',\n        },\n        {\n          description: 'The variable\\'s name is used.',\n          name: 'VarDeclaration',\n          privacy: 'public',\n        },\n        {\n          description: 'The left hand side of the assignment is used.',\n          name: 'Assignment',\n          privacy: 'public',\n        },\n        {\n          description: 'Namespaced assignments work too',\n          name: 'Namespace.AlsoAssignment',\n          privacy: 'public',\n        },\n        {\n          description: 'Declared namespace works too',\n          name: 'Declared.AnotherAssignment',\n          privacy: 'public',\n        },\n        {\n          description: '',\n          name: 'ClassWithNoJsDoc',\n          privacy: 'public',\n        },\n      ]);\n    });\n\n    test('finds methods', async () => {\n      const classes = await getClasses('class/class-methods.js');\n      assert.deepEqual(await Promise.all(classes.map((c) => getTestProps(c))), [\n        {\n          name: 'Class',\n          description: '',\n          privacy: 'public',\n          properties: [{name: 'customInstanceGetter'}],\n          methods: [\n            {\n              name: 'customInstanceFunction',\n              description: '',\n            },\n            {\n              name: 'customInstanceFunctionWithJSDoc',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithJSDoc.',\n              return: {\n                desc: 'The number 5, always.',\n                type: 'Number',\n              },\n            },\n            {\n              name: 'customInstanceFunctionWithParams',\n              description: '',\n              params: [{name: 'a'}, {name: 'b'}, {name: 'c'}],\n\n            },\n            {\n              name: 'customInstanceFunctionWithParamsAndJSDoc',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithParamsAndJSDoc.',\n              params: [\n                {\n                  name: 'a',\n                  type: 'Number',\n                  description: 'The first argument',\n                },\n                {\n                  name: 'b',\n                  type: 'Number',\n                },\n                {\n                  name: 'c',\n                  type: 'Number',\n                  description: 'The third argument',\n                }\n              ],\n              return: {\n                desc: 'The number 7, always.',\n                type: 'Number',\n              },\n            },\n            {\n              name: 'customInstanceFunctionWithParamsAndPrivateJSDoc',\n              description: 'This is the description for\\n' +\n                  'customInstanceFunctionWithParamsAndPrivateJSDoc.',\n            },\n            {\n              name: 'customInstanceFunctionWithRestParam',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithRestParam.',\n              params: [\n                {\n                  name: 'a',\n                  type: 'Number',\n                  description: 'The first argument.',\n                },\n                {\n                  name: 'b',\n                  type: '...Number',\n                  rest: true,\n                  description: 'The second argument.',\n                }\n              ],\n              return: {\n                desc: 'The number 9, always.',\n                type: 'Number',\n              },\n            },\n            {\n              name: 'customInstanceFunctionWithParamDefault',\n              description: 'This is the description for ' +\n                  'customInstanceFunctionWithParamDefault.',\n              params: [\n                {\n                  name: 'a',\n                  type: 'Number',\n                  description: 'The first argument.',\n                },\n                {\n                  name: 'b',\n                  type: 'Number',\n                  defaultValue: '0',\n                  description: 'The second argument.',\n                }\n              ],\n              return: {\n                desc: 'The number 10, always.',\n                type: 'Number',\n              },\n            },\n            {\n              description: undefined,\n              name: 'customInstanceFunctionOnProto',\n              params: [{description: 'a bool', name: 'foo', type: 'boolean'}],\n              return: {type: 'void'}\n            },\n            {\n              description: undefined,\n              name: '__customInstanceFunctionOnProtoPrivate'\n            },\n            {\n              description: undefined,\n              name: 'customInstanceFunctionOnProtoWithBody'\n            },\n            {\n              description: 'Returns the sum of two numbers',\n              name: 'customInstanceFunctionOnProtoWithBodyDoc',\n              params: [\n                {description: 'some number', name: 'a', type: 'number'},\n                {description: 'another number', name: 'b', type: 'number'}\n              ],\n              return: {type: 'number'}\n            },\n          ]\n        },\n      ]);\n    });\n\n    test('deals with super classes correctly', async () => {\n      const classes = await getClasses('class/super-class.js');\n\n      assert.deepEqual(classes.map((f) => f.name), ['Base', 'Subclass']);\n      assert.deepEqual(await Promise.all(classes.map((c) => getTestProps(c))), [\n        {\n          name: 'Base',\n          description: '',\n          privacy: 'public',\n          methods: [\n            {\n              description: 'This is a base method.',\n              name: 'baseMethod',\n              return: {type: 'void'},\n            },\n            {\n              description: 'Will be overriden by Subclass.',\n              name: 'overriddenMethod',\n              return: {type: 'void'},\n            }\n          ]\n        },\n        {\n          name: 'Subclass',\n          description: '',\n          privacy: 'public',\n          superClass: 'Base',\n          methods: [\n            {\n              description: 'This is a base method.',\n              name: 'baseMethod',\n              inheritedFrom: 'Base',\n              return: {type: 'void'},\n            },\n            {\n              description: 'Overrides the method on Base.',\n              name: 'overriddenMethod',\n              return: {type: 'void'},\n            },\n            {\n              description: 'This method only exists on Subclass.',\n              name: 'subMethod',\n              return: {type: 'void'},\n            },\n          ]\n        }\n      ]);\n    });\n\n    const testName =\n        'does not produce duplicate classes for elements or mixins';\n    test(testName, async () => {\n      const features = (await analyzer.analyze([\n                         'class/more-specific-classes.js'\n                       ])).getFeatures();\n      const interestingFeatures =\n          Array.from(features).filter(\n              (f) => f instanceof Element || f instanceof ElementMixin ||\n                  f instanceof Class) as Array<Element|ElementMixin|Class>;\n\n      // Ensures no duplicates\n      assert.deepEqual(\n          interestingFeatures.map((f) => f.name),\n          ['Element', 'AnnotatedElement', 'Mixin', 'AnnotatedMixin']);\n\n      // Ensures we get the more specific types\n      // TODO(rictic): these should probably not be Polymer specific.\n      assert.deepEqual(interestingFeatures.map((f) => f.constructor.name), [\n        'PolymerElement',\n        'PolymerElement',\n        'PolymerElementMixin',\n        'PolymerElementMixin'\n      ]);\n    });\n  });\n});\n"]}